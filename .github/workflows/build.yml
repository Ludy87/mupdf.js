name: Build MuPDF.js

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake libfreetype6-dev libx11-dev libxext-dev libxrandr-dev libxinerama-dev libxcursor-dev libgl1-mesa-dev libglu1-mesa-dev libxi-dev freeglut3-dev

      # - name: Clone MuPDF repository
      #   run: |
      #     git clone --recursive git://git.ghostscript.com/mupdf.git libmupdf
      #     cd libmupdf
      #     git submodule update --init

      # - name: Build MuPDF
      #   run: |
      #     cd libmupdf
      #     sudo make prefix=/usr/local install

      # - name: Verify build
      #   run: |
      #     ls /usr/local/bin | grep mupdf || echo "No binaries found"
      #     ls /usr/local/lib | grep libmupdf || echo "No libraries found"

      - name: Set up Emscripten
        run: |
          # Install dependencies
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip

          # Install Emscripten
          git clone https://github.com/emscripten-core/emsdk.git /opt/emsdk
          cd /opt/emsdk
          ./emsdk install 3.1.55
          ./emsdk activate 3.1.55
          source ./emsdk_env.sh

      - name: Build MuPDF with Emscripten
        run: |
          cd libmupdf
          export OS=wasm
          make build=release OS=wasm || true

      - name: Install Node.js dependencies
        run: |
          npm install
          npm install --save-dev @types/node

      - name: Build project
        run: npm run prepare

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: libmupdf/dist/

      - name: Set up git config
        run: |
          git config --global user.email "GitHub Action <action@github.com>"
          git config --global user.name "GitHub Action <action@github.com>"

      - name: Run git add
        run: |
          git add .
          git diff --staged --quiet || echo "CHANGES_DETECTED=true" >> $GITHUB_ENV

      - name: Create Pull Request
        id: cpr
        if: env.CHANGES_DETECTED == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Update 3rd Party Licenses"
          committer: GitHub Action <action@github.com>
          author: GitHub Action <action@github.com>
          signoff: true
          branch: update-3rd-party-licenses
          title: "Update 3rd Party Licenses"
          body: |
            Auto-generated by [create-pull-request][1]
            [1]: https://github.com/peter-evans/create-pull-request
          labels: licenses
          draft: false
          delete-branch: true
